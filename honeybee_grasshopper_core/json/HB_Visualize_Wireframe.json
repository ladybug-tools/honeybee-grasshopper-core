{
  "version": "1.8.0", 
  "nickname": "VizWireF", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "geo", 
        "description": "The Rhino wireframe version of the Honeybee geometry object, which\nwill be visible in the Rhino scene.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_hb_objs", 
      "description": "A Honeybee Model, Room, Face, Shade, Aperture, or Door to be previewed\nas a wire frame in the Rhino scene.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "1 :: Visualize", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.model import Model\n    from honeybee.room import Room\n    from honeybee.face import Face\n    from honeybee.aperture import Aperture\n    from honeybee.door import Door\n    from honeybee.shade import Shade\n    from honeybee.shademesh import ShadeMesh\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.fromgeometry import from_face3d_to_wireframe, \\\n        from_mesh3d_to_wireframe\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\ndef add_door(door, geo):\n    \"\"\"Add Door geometry to a geo list.\"\"\"\n    geo.extend(from_face3d_to_wireframe(door.geometry))\n    for shd in door.shades:\n        geo.extend(from_face3d_to_wireframe(shd.geometry))\n\ndef add_aperture(aperture, geo):\n    \"\"\"Add Aperture geometry to a geo list.\"\"\"\n    geo.extend(from_face3d_to_wireframe(aperture.geometry))\n    for shd in aperture.shades:\n        geo.extend(from_face3d_to_wireframe(shd.geometry))\n\ndef add_face(face, geo):\n    \"\"\"Add Face geometry to a geo list.\"\"\"\n    geo.extend(from_face3d_to_wireframe(face.geometry))\n    for ap in face.apertures:\n        add_aperture(ap, geo)\n    for dr in face.doors:\n        add_door(dr, geo)\n    for shd in face.shades:\n        geo.extend(from_face3d_to_wireframe(shd.geometry))\n\ndef add_room(room, geo):\n    \"\"\"Add Room geometry to a geo list.\"\"\"\n    for face in room.faces:\n        add_face(face, geo)\n    for shd in room.shades:\n        geo.extend(from_face3d_to_wireframe(shd.geometry))\n\ndef add_model(model, geo):\n    \"\"\"Add Model geometry to a geo list.\"\"\"\n    for room in model.rooms:\n        add_room(room, geo)\n    for face in model.orphaned_faces:\n        add_face(face, geo)\n    for ap in model.orphaned_apertures:\n        add_aperture(ap, geo)\n    for dr in model.orphaned_doors:\n        add_door(dr, geo)\n    for shd in model.orphaned_shades:\n        geo.extend(from_face3d_to_wireframe(shd.geometry))\n    for sm in model.shade_meshes:\n        geo.extend(from_mesh3d_to_wireframe(sm.geometry))\n\n\nif all_required_inputs(ghenv.Component):\n    # list of {{cad}} geometry to be filled with content\n    geo = []\n    \n    # loop through all objects and add them\n    for hb_obj in _hb_objs:\n        if isinstance(hb_obj, Room):\n            add_room(hb_obj, geo)\n        elif isinstance(hb_obj, Face):\n            add_face(hb_obj, geo)\n        elif isinstance(hb_obj, Aperture):\n            add_aperture(hb_obj, geo)\n        elif isinstance(hb_obj, Door):\n            add_door(hb_obj, geo)\n        elif isinstance(hb_obj, Shade):\n            geo.extend(from_face3d_to_wireframe(hb_obj.geometry))\n        elif isinstance(hb_obj, ShadeMesh):\n            geo.extend(from_mesh3d_to_wireframe(hb_obj.geometry))\n        elif isinstance(hb_obj, Model):\n            add_model(hb_obj, geo)\n        else:\n            raise TypeError(\n                'Unrecognized honeybee object type: {}'.format(type(hb_obj)))", 
  "category": "Honeybee", 
  "name": "HB Visualize Wireframe", 
  "description": "Quickly preview any Honeybee geometry object as a wire frame within the Rhino\nscene, including all sub-faces and assigned shades.\n-"
}