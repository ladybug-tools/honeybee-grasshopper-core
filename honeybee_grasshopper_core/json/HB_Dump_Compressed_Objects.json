{
  "version": "1.7.0", 
  "nickname": "DumpCompressed", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "hb_file", 
        "description": "The location of the file where the honeybee .pkl file is saved.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_hb_objs", 
      "description": "A Honeybee object (or list of Honeybee objects) to be written\nto a file.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "A name for the file to which the honeybee objects will be\nwritten. (Default: 'unnamed').", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_folder_", 
      "description": "An optional directory into which the honeybee objects will be\nwritten.  The default is set to the default simulation folder.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_dump", 
      "description": "Set to \"True\" to save the honeybee objects to file.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Serialize", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.model import Model\n    from honeybee.config import folders\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the core ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nimport os\nimport cPickle as pickle\n\n\nif all_required_inputs(ghenv.Component) and _dump:\n    # set the component defaults\n    name = _name_ if _name_ is not None else 'unnamed'\n    file_name = '{}.pkl'.format(name) if len(_hb_objs) > 1 or not \\\n        isinstance(_hb_objs[0], Model) else '{}.hbpkl'.format(name)\n    folder = _folder_ if _folder_ is not None else folders.default_simulation_folder\n    hb_file = os.path.join(folder, file_name)\n\n    # create the dictionary to be written to a .pkl file\n    if len(_hb_objs) == 1:  # write a single object into a file if the length is 1\n        obj_dict = _hb_objs[0].to_dict()\n    else:  # create a dictionary of the objects that are indexed by name\n        obj_dict = {}\n        for obj in _hb_objs:\n            obj_dict[obj.identifier] = obj.to_dict()\n\n    # write the dictionary into a file\n    if not os.path.isdir(folder):\n        os.makedirs(folder)\n    with open(hb_file, 'wb') as fp:\n        pickle.dump(obj_dict, fp)\n", 
  "category": "Honeybee", 
  "name": "HB Dump Compressed Objects", 
  "description": "Dump any honeybee object to a compressed .pkl file. You can use \"HB Load Compressed\nObjects\" component to load the objects from the file back into Grasshopper.\n-\nHoneybee objects include any Model, Room, Face, Aperture, Door, Shade, or\nboundary condition object\n-\nIt also includes any honeybee energy Material, Construction, ConstructionSet,\nSchedule, Load, ProgramType, or Simulation object.\n-"
}