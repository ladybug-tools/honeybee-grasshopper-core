{
  "version": "1.8.0", 
  "nickname": "ColorRoomAttr", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "mesh", 
        "description": "Meshes of the room floors colored according to their attributes.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "legend", 
        "description": "Geometry representing the legend for colored meshes.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "wire_frame", 
        "description": "A list of lines representing the outlines of the rooms.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "values", 
        "description": "A list of values that align with the input _rooms noting the\nattribute assigned to each room.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "colors", 
        "description": "A list of colors that align with the input Rooms, noting the color\nof each Room in the Rhino scene. This can be used in conjunction\nwith the native Grasshopper \"Custom Preview\" component and other\nhoneybee visualization components (like \"HB Visulaize Quick\") to\ncreate custom visualizations in the Rhino scene.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "vis_set", 
        "description": "An object containing VisualizationSet arguments for drawing a detailed\nversion of the ColorRoom in the Rhino scene. This can be connected to\nthe \"LB Preview Visualization Set\" component to display this version\nof the visualization in Rhino.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_rooms_model", 
      "description": "An array of honeybee Rooms or honeybee Models to be colored\nwith their attributes in the Rhino scene.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_attribute", 
      "description": "Text for the name of the Room attribute with which the\nRooms should be labeled. The Honeybee \"Room Attributes\" component\nlists all of the core attributes of the room. Also, each Honeybee\nextension (ie. Radiance, Energy) includes its own component that\nlists the Room attributes of that extension.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "legend_par_", 
      "description": "An optional LegendParameter object to change the display\nof the colored rooms (Default: None).", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "1 :: Visualize", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.model import Model\n    from honeybee.colorobj import ColorRoom\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.fromgeometry import from_face3ds_to_colored_mesh, \\\n        from_polyface3d_to_wireframe\n    from ladybug_{{cad}}.fromobjects import legend_objects\n    from ladybug_{{cad}}.color import color_to_color\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # extract any rooms from input Models\n    rooms = []\n    for hb_obj in _rooms_model:\n        if isinstance(hb_obj, Model):\n            rooms.extend(hb_obj.rooms)\n        else:\n            rooms.append(hb_obj)\n\n    # create the ColorRoom visualization object and output geometry\n    color_obj = ColorRoom(rooms, _attribute, legend_par_)\n    graphic = color_obj.graphic_container\n    mesh = [from_face3ds_to_colored_mesh(flrs, col) for flrs, col in\n            zip(color_obj.floor_faces, graphic.value_colors)]\n    wire_frame = []\n    for room in rooms:\n        wire_frame.extend(from_polyface3d_to_wireframe(room.geometry))\n    legend = legend_objects(graphic.legend)\n    values = color_obj.attributes_original\n    colors = [color_to_color(col) for col in graphic.value_colors]\n    vis_set = color_obj", 
  "category": "Honeybee", 
  "name": "HB Color Room Attributes", 
  "description": "Color Honeybee rooms in the Rhino scene using their attributes.\n_\nThis can be used as a means to check that correct properties are assigned to\ndifferent Rooms.\n-"
}