{
  "version": "1.2.1", 
  "nickname": "IntSolid", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "int_solids", 
        "description": "The same input closed breps that have had their component\nfaces split by adjacent polysurfaces to have matching surfaces between\nadjacent breps.  It is recommended that you bake this output and check\nit in Rhino before turning the breps into honeybee Rooms.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_solids", 
      "description": "A list of closed Rhino breps (polysurfaces) that do not have matching\nsurfaces between adjacent Faces.", 
      "type": "Brep", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_cpu_count_", 
      "description": "An integer to set the number of CPUs used in the execution of the\nintersection calculation. If unspecified, it will automatically default\nto one less than the number of CPUs currently available on the\nmachine or 1 if only one processor is available.", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_run", 
      "description": "Set to True to run the component.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.intersect import intersect_solids, intersect_solids_parallel\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, recommended_processor_count\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\n\nif all_required_inputs(ghenv.Component) and _run:\n    # generate bounding boxes for all inputs\n    b_boxes = [brep.GetBoundingBox(False) for brep in _solids]\n    \n    # intersect all of the solid geometries\n    workers = _cpu_count_ if _cpu_count_ is not None else recommended_processor_count()\n    if workers > 1:\n        int_solids = intersect_solids_parallel(_solids, b_boxes, workers)\n    else:  # just use the single-core process\n        int_solids = intersect_solids(_solids, b_boxes)\n", 
  "category": "Honeybee", 
  "name": "HB Intersect Solids", 
  "description": "Take a list of closed breps (polysurfaces) and split their Faces to ensure that\nthere are matching surfaces between them.\n_\nThis matching between Room faces is required in order to contruct a correct\nmulti-room energy model since conductive heat flow won't occur correctly across\ninterior faces when their surface areas do not match.\n-"
}