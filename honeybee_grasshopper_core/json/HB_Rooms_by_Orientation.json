{
  "version": "1.8.0", 
  "nickname": "Orientation", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "orientations", 
        "description": "A list of numbers between 0 and 360 with one orientation\nfor each branch of the output perim_rooms. This will be a list of\nangle ranges if a value is input for n_groups_.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "perim_rooms", 
        "description": "A data tree of honeybee rooms with each branch of the tree\nrepresenting a different orientation.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "core_rooms", 
        "description": "A list of honeybee rooms with no identifiable orientation.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_rooms", 
      "description": "A list of honeybee honeybee Rooms or honeybee Models to be\nseparated by orientation.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "n_groups_", 
      "description": "An optional positive integer to set the number of orientation\ngroups to use. For example, setting this to 4 will result in rooms\nbeing grouped by four orientations (North, East, South, West). If None,\nthe maximum number of unique groups will be used.", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "north_", 
      "description": "A number between 0 and 360 to set the clockwise north\ndirection in degrees. This can also be a vector to set the North.\nDefault is 0.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "2 :: Organize", 
  "code": "\ntry:  # import the ladybug_geometry dependencies\n    from ladybug_geometry.geometry2d.pointvector import Vector2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_geometry:\\n\\t{}'.format(e))\n\ntry:  # import the core honeybee dependencies\n    from honeybee.model import Model\n    from honeybee.room import Room\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_geometry:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.togeometry import to_vector2d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, list_to_data_tree\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nimport math\n\n\nif all_required_inputs(ghenv.Component):\n    # extract any rooms from input Models\n    in_rooms = []\n    for hb_obj in _rooms:\n        if isinstance(hb_obj, Model):\n            in_rooms.extend(hb_obj.rooms)\n        else:\n            in_rooms.append(hb_obj)\n\n    # process the north_ input\n    if north_ is not None:\n        try:\n            north_vec = to_vector2d(north_)\n        except AttributeError:  # north angle instead of vector\n            north_vec = Vector2D(0, 1).rotate(-math.radians(float(north_)))\n    else:\n        north_vec = Vector2D(0, 1)\n\n    # group the rooms by orientation\n    perim_rooms, core_rooms, orientations, = \\\n        Room.group_by_orientation(in_rooms, n_groups_, north_vec)\n\n    # convert list of lists to data tree\n    perim_rooms = list_to_data_tree(perim_rooms)\n", 
  "category": "Honeybee", 
  "name": "HB Rooms by Orientation", 
  "description": "Separate and group honeybee rooms with the same average orientation of walls\nwith an Outdoors boundary condition.\n-"
}